"""Add payroll calculation engine models

Revision ID: 9005681d3efc
Revises: 7a35dee8d386
Create Date: 2025-06-02 17:39:10.449170

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9005681d3efc'
down_revision: Union[str, None] = '7a35dee8d386'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Create attendance schema if it doesn't exist
    op.execute("CREATE SCHEMA IF NOT EXISTS attendance")
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attendance_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('period_name', sa.String(length=100), nullable=False, comment='周期名称'),
    sa.Column('period_start', sa.Date(), nullable=False, comment='周期开始日期'),
    sa.Column('period_end', sa.Date(), nullable=False, comment='周期结束日期'),
    sa.Column('standard_work_days', sa.Integer(), nullable=False, comment='标准工作天数'),
    sa.Column('standard_work_hours_per_day', sa.Numeric(precision=4, scale=2), nullable=True, comment='每日标准工作小时'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='状态'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='attendance'
    )
    op.create_index(op.f('ix_attendance_attendance_periods_id'), 'attendance_periods', ['id'], unique=False, schema='attendance')
    op.create_table('attendance_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_name', sa.String(length=100), nullable=False, comment='规则名称'),
    sa.Column('rule_type', sa.String(length=50), nullable=False, comment='规则类型'),
    sa.Column('standard_work_start', sa.Time(), nullable=True, comment='标准上班时间'),
    sa.Column('standard_work_end', sa.Time(), nullable=True, comment='标准下班时间'),
    sa.Column('lunch_break_start', sa.Time(), nullable=True, comment='午休开始时间'),
    sa.Column('lunch_break_end', sa.Time(), nullable=True, comment='午休结束时间'),
    sa.Column('flexible_start_minutes', sa.Integer(), nullable=True, comment='弹性上班分钟数'),
    sa.Column('flexible_end_minutes', sa.Integer(), nullable=True, comment='弹性下班分钟数'),
    sa.Column('late_tolerance_minutes', sa.Integer(), nullable=True, comment='迟到容忍分钟数'),
    sa.Column('early_leave_tolerance_minutes', sa.Integer(), nullable=True, comment='早退容忍分钟数'),
    sa.Column('overtime_start_minutes', sa.Integer(), nullable=True, comment='加班开始分钟数'),
    sa.Column('weekend_overtime_rate', sa.Numeric(precision=4, scale=2), nullable=True, comment='周末加班倍率'),
    sa.Column('holiday_overtime_rate', sa.Numeric(precision=4, scale=2), nullable=True, comment='节假日加班倍率'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('effective_date', sa.Date(), nullable=False, comment='生效日期'),
    sa.Column('end_date', sa.Date(), nullable=True, comment='结束日期'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='attendance'
    )
    op.create_index(op.f('ix_attendance_attendance_rules_id'), 'attendance_rules', ['id'], unique=False, schema='attendance')
    op.create_table('calculation_rule_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_set_name', sa.String(length=100), nullable=False, comment='规则集名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='规则集描述'),
    sa.Column('version', sa.String(length=20), nullable=False, comment='版本号'),
    sa.Column('applicable_departments', sa.JSON(), nullable=True, comment='适用部门'),
    sa.Column('applicable_positions', sa.JSON(), nullable=True, comment='适用职位'),
    sa.Column('applicable_employee_types', sa.JSON(), nullable=True, comment='适用员工类型'),
    sa.Column('calculation_order', sa.JSON(), nullable=False, comment='计算顺序配置'),
    sa.Column('default_configs', sa.JSON(), nullable=True, comment='默认配置参数'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('is_default', sa.Boolean(), nullable=True, comment='是否为默认规则集'),
    sa.Column('effective_date', sa.Date(), nullable=False, comment='生效日期'),
    sa.Column('end_date', sa.Date(), nullable=True, comment='结束日期'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='payroll'
    )
    op.create_index(op.f('ix_payroll_calculation_rule_sets_id'), 'calculation_rule_sets', ['id'], unique=False, schema='payroll')
    op.create_table('social_insurance_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_name', sa.String(length=100), nullable=False, comment='配置名称'),
    sa.Column('insurance_type', sa.String(length=50), nullable=False, comment='保险类型'),
    sa.Column('employee_rate', sa.Numeric(precision=5, scale=4), nullable=False, comment='个人缴费比例'),
    sa.Column('employer_rate', sa.Numeric(precision=5, scale=4), nullable=False, comment='单位缴费比例'),
    sa.Column('base_calculation_method', sa.String(length=50), nullable=False, comment='基数计算方法'),
    sa.Column('min_base', sa.Numeric(precision=10, scale=2), nullable=True, comment='最低缴费基数'),
    sa.Column('max_base', sa.Numeric(precision=10, scale=2), nullable=True, comment='最高缴费基数'),
    sa.Column('region_code', sa.String(length=20), nullable=True, comment='适用地区代码'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('effective_date', sa.Date(), nullable=False, comment='生效日期'),
    sa.Column('end_date', sa.Date(), nullable=True, comment='结束日期'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='payroll'
    )
    op.create_index(op.f('ix_payroll_social_insurance_configs_id'), 'social_insurance_configs', ['id'], unique=False, schema='payroll')
    op.create_table('tax_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_name', sa.String(length=100), nullable=False, comment='配置名称'),
    sa.Column('tax_type', sa.String(length=50), nullable=False, comment='税种类型'),
    sa.Column('basic_deduction', sa.Numeric(precision=10, scale=2), nullable=False, comment='基本减除费用'),
    sa.Column('tax_brackets', sa.JSON(), nullable=False, comment='税率表配置'),
    sa.Column('calculation_method', sa.String(length=50), nullable=True, comment='计算方法'),
    sa.Column('additional_config', sa.JSON(), nullable=True, comment='额外配置参数'),
    sa.Column('region_code', sa.String(length=20), nullable=True, comment='适用地区代码'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('effective_date', sa.Date(), nullable=False, comment='生效日期'),
    sa.Column('end_date', sa.Date(), nullable=True, comment='结束日期'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='payroll'
    )
    op.create_index(op.f('ix_payroll_tax_configs_id'), 'tax_configs', ['id'], unique=False, schema='payroll')
    op.create_table('calculation_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_set_id', sa.Integer(), nullable=False),
    sa.Column('component_definition_id', sa.Integer(), nullable=False),
    sa.Column('rule_name', sa.String(length=100), nullable=False, comment='规则名称'),
    sa.Column('rule_type', sa.String(length=50), nullable=False, comment='规则类型'),
    sa.Column('calculation_method', sa.String(length=50), nullable=False, comment='计算方法'),
    sa.Column('calculation_config', sa.JSON(), nullable=False, comment='计算配置参数'),
    sa.Column('condition_expression', sa.Text(), nullable=True, comment='适用条件表达式'),
    sa.Column('condition_config', sa.JSON(), nullable=True, comment='条件配置参数'),
    sa.Column('priority', sa.Integer(), nullable=True, comment='优先级'),
    sa.Column('execution_order', sa.Integer(), nullable=True, comment='执行顺序'),
    sa.Column('depends_on_components', sa.JSON(), nullable=True, comment='依赖的组件'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('is_mandatory', sa.Boolean(), nullable=True, comment='是否必须执行'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['component_definition_id'], ['config.payroll_component_definitions.id'], ),
    sa.ForeignKeyConstraint(['rule_set_id'], ['payroll.calculation_rule_sets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='payroll'
    )
    op.create_index(op.f('ix_payroll_calculation_rules_id'), 'calculation_rules', ['id'], unique=False, schema='payroll')
    op.create_index(op.f('ix_payroll_calculation_rules_rule_set_id'), 'calculation_rules', ['rule_set_id'], unique=False, schema='payroll')
    op.create_table('calculation_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_name', sa.String(length=100), nullable=False, comment='模板名称'),
    sa.Column('template_type', sa.String(length=50), nullable=False, comment='模板类型'),
    sa.Column('description', sa.Text(), nullable=True, comment='模板描述'),
    sa.Column('rule_set_id', sa.Integer(), nullable=False),
    sa.Column('template_config', sa.JSON(), nullable=False, comment='模板配置'),
    sa.Column('applicable_conditions', sa.JSON(), nullable=True, comment='适用条件'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('is_default', sa.Boolean(), nullable=True, comment='是否为默认模板'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rule_set_id'], ['payroll.calculation_rule_sets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='payroll'
    )
    op.create_index(op.f('ix_payroll_calculation_templates_id'), 'calculation_templates', ['id'], unique=False, schema='payroll')
    op.create_table('payroll_component_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('component_definition_id', sa.Integer(), nullable=False),
    sa.Column('config_name', sa.String(length=100), nullable=False, comment='配置名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='配置描述'),
    sa.Column('calculation_method', sa.String(length=50), nullable=False, comment='计算方法'),
    sa.Column('calculation_config', sa.JSON(), nullable=False, comment='计算配置参数'),
    sa.Column('applicable_conditions', sa.JSON(), nullable=True, comment='适用条件'),
    sa.Column('priority', sa.Integer(), nullable=True, comment='优先级'),
    sa.Column('calculation_order', sa.Integer(), nullable=True, comment='计算顺序'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('effective_date', sa.Date(), nullable=False, comment='生效日期'),
    sa.Column('end_date', sa.Date(), nullable=True, comment='结束日期'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['component_definition_id'], ['config.payroll_component_definitions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='payroll'
    )
    op.create_index(op.f('ix_payroll_payroll_component_configs_id'), 'payroll_component_configs', ['id'], unique=False, schema='payroll')
    op.create_table('attendance_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('work_days', sa.Integer(), nullable=True, comment='实际工作天数'),
    sa.Column('overtime_hours', sa.Numeric(precision=6, scale=2), nullable=True, comment='加班小时数'),
    sa.Column('leave_days', sa.Numeric(precision=4, scale=2), nullable=True, comment='请假天数'),
    sa.Column('late_times', sa.Integer(), nullable=True, comment='迟到次数'),
    sa.Column('early_leave_times', sa.Integer(), nullable=True, comment='早退次数'),
    sa.Column('absent_days', sa.Numeric(precision=4, scale=2), nullable=True, comment='缺勤天数'),
    sa.Column('annual_leave_days', sa.Numeric(precision=4, scale=2), nullable=True, comment='年假天数'),
    sa.Column('sick_leave_days', sa.Numeric(precision=4, scale=2), nullable=True, comment='病假天数'),
    sa.Column('personal_leave_days', sa.Numeric(precision=4, scale=2), nullable=True, comment='事假天数'),
    sa.Column('maternity_leave_days', sa.Numeric(precision=4, scale=2), nullable=True, comment='产假天数'),
    sa.Column('other_leave_days', sa.Numeric(precision=4, scale=2), nullable=True, comment='其他假期天数'),
    sa.Column('weekday_overtime_hours', sa.Numeric(precision=6, scale=2), nullable=True, comment='工作日加班小时'),
    sa.Column('weekend_overtime_hours', sa.Numeric(precision=6, scale=2), nullable=True, comment='周末加班小时'),
    sa.Column('holiday_overtime_hours', sa.Numeric(precision=6, scale=2), nullable=True, comment='节假日加班小时'),
    sa.Column('attendance_rate', sa.Numeric(precision=5, scale=4), nullable=True, comment='出勤率'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='状态'),
    sa.Column('remarks', sa.String(length=500), nullable=True, comment='备注'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['hr.employees.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['attendance.attendance_periods.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='attendance'
    )
    op.create_index(op.f('ix_attendance_attendance_records_employee_id'), 'attendance_records', ['employee_id'], unique=False, schema='attendance')
    op.create_index(op.f('ix_attendance_attendance_records_id'), 'attendance_records', ['id'], unique=False, schema='attendance')
    op.create_index(op.f('ix_attendance_attendance_records_period_id'), 'attendance_records', ['period_id'], unique=False, schema='attendance')
    op.create_table('employee_salary_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('basic_salary', sa.Numeric(precision=10, scale=2), nullable=False, comment='基本工资'),
    sa.Column('salary_grade_id', sa.Integer(), nullable=True, comment='薪资等级'),
    sa.Column('social_insurance_base', sa.Numeric(precision=10, scale=2), nullable=True, comment='社保基数'),
    sa.Column('housing_fund_base', sa.Numeric(precision=10, scale=2), nullable=True, comment='公积金基数'),
    sa.Column('child_education_deduction', sa.Numeric(precision=10, scale=2), nullable=True, comment='子女教育扣除'),
    sa.Column('continuing_education_deduction', sa.Numeric(precision=10, scale=2), nullable=True, comment='继续教育扣除'),
    sa.Column('medical_deduction', sa.Numeric(precision=10, scale=2), nullable=True, comment='大病医疗扣除'),
    sa.Column('housing_loan_deduction', sa.Numeric(precision=10, scale=2), nullable=True, comment='住房贷款利息扣除'),
    sa.Column('housing_rent_deduction', sa.Numeric(precision=10, scale=2), nullable=True, comment='住房租金扣除'),
    sa.Column('elderly_care_deduction', sa.Numeric(precision=10, scale=2), nullable=True, comment='赡养老人扣除'),
    sa.Column('overtime_rate_multiplier', sa.Numeric(precision=4, scale=2), nullable=True, comment='加班费倍数'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('effective_date', sa.Date(), nullable=False, comment='生效日期'),
    sa.Column('end_date', sa.Date(), nullable=True, comment='结束日期'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['hr.employees.id'], ),
    sa.ForeignKeyConstraint(['salary_grade_id'], ['config.lookup_values.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='payroll'
    )
    op.create_index(op.f('ix_payroll_employee_salary_configs_employee_id'), 'employee_salary_configs', ['employee_id'], unique=False, schema='payroll')
    op.create_index(op.f('ix_payroll_employee_salary_configs_id'), 'employee_salary_configs', ['id'], unique=False, schema='payroll')
    op.create_table('daily_attendance_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attendance_record_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('attendance_date', sa.Date(), nullable=False, comment='考勤日期'),
    sa.Column('day_type', sa.String(length=20), nullable=False, comment='日期类型'),
    sa.Column('check_in_time', sa.Time(), nullable=True, comment='上班打卡时间'),
    sa.Column('check_out_time', sa.Time(), nullable=True, comment='下班打卡时间'),
    sa.Column('standard_check_in', sa.Time(), nullable=True, comment='标准上班时间'),
    sa.Column('standard_check_out', sa.Time(), nullable=True, comment='标准下班时间'),
    sa.Column('work_hours', sa.Numeric(precision=4, scale=2), nullable=True, comment='工作小时数'),
    sa.Column('overtime_hours', sa.Numeric(precision=4, scale=2), nullable=True, comment='加班小时数'),
    sa.Column('attendance_status', sa.String(length=20), nullable=False, comment='考勤状态'),
    sa.Column('leave_type', sa.String(length=20), nullable=True, comment='请假类型'),
    sa.Column('is_late', sa.Boolean(), nullable=True, comment='是否迟到'),
    sa.Column('is_early_leave', sa.Boolean(), nullable=True, comment='是否早退'),
    sa.Column('late_minutes', sa.Integer(), nullable=True, comment='迟到分钟数'),
    sa.Column('early_leave_minutes', sa.Integer(), nullable=True, comment='早退分钟数'),
    sa.Column('remarks', sa.String(length=200), nullable=True, comment='备注'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['attendance_record_id'], ['attendance.attendance_records.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['hr.employees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='attendance'
    )
    op.create_index(op.f('ix_attendance_daily_attendance_records_attendance_record_id'), 'daily_attendance_records', ['attendance_record_id'], unique=False, schema='attendance')
    op.create_index(op.f('ix_attendance_daily_attendance_records_employee_id'), 'daily_attendance_records', ['employee_id'], unique=False, schema='attendance')
    op.create_index(op.f('ix_attendance_daily_attendance_records_id'), 'daily_attendance_records', ['id'], unique=False, schema='attendance')
    op.create_table('report_calculated_fields',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='字段名称'),
    sa.Column('alias', sa.String(length=100), nullable=False, comment='字段别名'),
    sa.Column('formula', sa.Text(), nullable=False, comment='计算公式'),
    sa.Column('return_type', sa.String(length=50), nullable=False, comment='返回类型'),
    sa.Column('description', sa.Text(), nullable=True, comment='描述'),
    sa.Column('display_name_zh', sa.String(length=100), nullable=True, comment='中文显示名称'),
    sa.Column('display_name_en', sa.String(length=100), nullable=True, comment='英文显示名称'),
    sa.Column('is_global', sa.Boolean(), nullable=True, comment='是否全局字段'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否激活'),
    sa.Column('category', sa.String(length=50), nullable=True, comment='分类'),
    sa.Column('created_by', sa.BigInteger(), nullable=True, comment='创建者'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['created_by'], ['security.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index(op.f('ix_config_report_calculated_fields_id'), 'report_calculated_fields', ['id'], unique=False, schema='config')
    op.create_table('report_data_sources',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False, comment='数据源名称'),
    sa.Column('code', sa.String(length=100), nullable=False, comment='数据源编码'),
    sa.Column('description', sa.Text(), nullable=True, comment='数据源描述'),
    sa.Column('category', sa.String(length=50), nullable=True, comment='数据源分类'),
    sa.Column('connection_type', sa.String(length=50), nullable=False, comment='连接类型'),
    sa.Column('schema_name', sa.String(length=100), nullable=False, comment='模式名'),
    sa.Column('table_name', sa.String(length=255), nullable=True, comment='表名'),
    sa.Column('view_name', sa.String(length=100), nullable=True, comment='视图名'),
    sa.Column('custom_query', sa.Text(), nullable=True, comment='自定义查询SQL'),
    sa.Column('source_type', sa.String(length=20), nullable=False, comment='数据源类型'),
    sa.Column('connection_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='连接配置信息'),
    sa.Column('field_mapping', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='字段映射配置'),
    sa.Column('default_filters', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='默认筛选条件'),
    sa.Column('sort_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='默认排序配置'),
    sa.Column('access_level', sa.String(length=20), nullable=True, comment='访问级别: public, private, restricted'),
    sa.Column('allowed_roles', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='允许访问的角色列表'),
    sa.Column('allowed_users', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='允许访问的用户列表'),
    sa.Column('cache_enabled', sa.Boolean(), nullable=True, comment='是否启用缓存'),
    sa.Column('cache_duration', sa.Integer(), nullable=True, comment='缓存时长(秒)'),
    sa.Column('max_rows', sa.Integer(), nullable=True, comment='最大返回行数'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'),
    sa.Column('is_system', sa.Boolean(), nullable=False, comment='是否系统内置'),
    sa.Column('sort_order', sa.Integer(), nullable=False, comment='排序顺序'),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='标签'),
    sa.Column('field_count', sa.Integer(), nullable=True, comment='字段数量'),
    sa.Column('usage_count', sa.Integer(), nullable=True, comment='使用次数'),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True, comment='最后使用时间'),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True, comment='最后同步时间'),
    sa.Column('created_by', sa.BigInteger(), nullable=True, comment='创建者'),
    sa.Column('updated_by', sa.BigInteger(), nullable=True, comment='更新者'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['created_by'], ['security.users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['security.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    schema='config'
    )
    op.create_index('idx_data_source_category', 'report_data_sources', ['category'], unique=False, schema='config')
    op.create_index('idx_data_source_schema_table', 'report_data_sources', ['schema_name', 'table_name'], unique=False, schema='config')
    op.create_index('idx_data_source_type_active', 'report_data_sources', ['source_type', 'is_active'], unique=False, schema='config')
    op.create_index(op.f('ix_config_report_data_sources_id'), 'report_data_sources', ['id'], unique=False, schema='config')
    op.create_table('report_permissions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('subject_type', sa.String(length=20), nullable=False, comment='主体类型: user, role, department'),
    sa.Column('subject_id', sa.BigInteger(), nullable=False, comment='主体ID'),
    sa.Column('object_type', sa.String(length=20), nullable=False, comment='对象类型: data_source, template, field'),
    sa.Column('object_id', sa.BigInteger(), nullable=False, comment='对象ID'),
    sa.Column('permission_type', sa.String(length=20), nullable=False, comment='权限类型: read, write, execute, export, admin'),
    sa.Column('is_granted', sa.Boolean(), nullable=True, comment='是否授权'),
    sa.Column('conditions', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='权限条件'),
    sa.Column('granted_by', sa.BigInteger(), nullable=True, comment='授权者'),
    sa.Column('granted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='授权时间'),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True, comment='过期时间'),
    sa.ForeignKeyConstraint(['granted_by'], ['security.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index('idx_report_permissions_object', 'report_permissions', ['object_type', 'object_id'], unique=False, schema='config')
    op.create_index('idx_report_permissions_subject', 'report_permissions', ['subject_type', 'subject_id'], unique=False, schema='config')
    op.create_index('idx_report_permissions_type', 'report_permissions', ['permission_type'], unique=False, schema='config')
    op.create_index(op.f('ix_config_report_permissions_id'), 'report_permissions', ['id'], unique=False, schema='config')
    op.create_table('report_user_preferences',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('preference_type', sa.String(length=50), nullable=False, comment='偏好类型: layout, filter, sort, export'),
    sa.Column('object_type', sa.String(length=20), nullable=True, comment='对象类型: template, data_source'),
    sa.Column('object_id', sa.BigInteger(), nullable=True, comment='对象ID'),
    sa.Column('preference_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='偏好配置'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['security.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index('idx_user_preferences_type', 'report_user_preferences', ['preference_type'], unique=False, schema='config')
    op.create_index('idx_user_preferences_user', 'report_user_preferences', ['user_id'], unique=False, schema='config')
    op.create_index(op.f('ix_config_report_user_preferences_id'), 'report_user_preferences', ['id'], unique=False, schema='config')
    op.create_index('uq_user_preference', 'report_user_preferences', ['user_id', 'preference_type', 'object_type', 'object_id'], unique=True, schema='config')
    op.create_table('report_data_source_access_logs',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('data_source_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('access_type', sa.String(length=20), nullable=False, comment='访问类型: view, query, export'),
    sa.Column('access_result', sa.String(length=20), nullable=False, comment='访问结果: success, failed, denied'),
    sa.Column('query_params', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='查询参数'),
    sa.Column('result_count', sa.Integer(), nullable=True, comment='返回记录数'),
    sa.Column('execution_time', sa.DECIMAL(precision=10, scale=3), nullable=True, comment='执行时间(秒)'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='错误信息'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='IP地址'),
    sa.Column('user_agent', sa.String(length=500), nullable=True, comment='用户代理'),
    sa.Column('accessed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='访问时间'),
    sa.ForeignKeyConstraint(['data_source_id'], ['config.report_data_sources.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['security.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index(op.f('ix_config_report_data_source_access_logs_id'), 'report_data_source_access_logs', ['id'], unique=False, schema='config')
    op.create_table('report_data_source_fields',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('data_source_id', sa.BigInteger(), nullable=False),
    sa.Column('field_name', sa.String(length=100), nullable=False, comment='原始字段名'),
    sa.Column('field_alias', sa.String(length=100), nullable=True, comment='字段别名'),
    sa.Column('field_type', sa.String(length=50), nullable=False, comment='字段类型'),
    sa.Column('data_type', sa.String(length=50), nullable=True, comment='数据库数据类型'),
    sa.Column('display_name_zh', sa.String(length=200), nullable=True, comment='中文显示名称'),
    sa.Column('display_name_en', sa.String(length=200), nullable=True, comment='英文显示名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='字段描述'),
    sa.Column('is_nullable', sa.Boolean(), nullable=True, comment='是否可为空'),
    sa.Column('is_primary_key', sa.Boolean(), nullable=True, comment='是否主键'),
    sa.Column('is_foreign_key', sa.Boolean(), nullable=True, comment='是否外键'),
    sa.Column('is_indexed', sa.Boolean(), nullable=True, comment='是否有索引'),
    sa.Column('is_visible', sa.Boolean(), nullable=True, comment='是否可见'),
    sa.Column('is_searchable', sa.Boolean(), nullable=True, comment='是否可搜索'),
    sa.Column('is_sortable', sa.Boolean(), nullable=True, comment='是否可排序'),
    sa.Column('is_filterable', sa.Boolean(), nullable=True, comment='是否可筛选'),
    sa.Column('is_exportable', sa.Boolean(), nullable=True, comment='是否可导出'),
    sa.Column('field_group', sa.String(length=50), nullable=True, comment='字段分组'),
    sa.Column('field_category', sa.String(length=50), nullable=True, comment='字段分类'),
    sa.Column('sort_order', sa.Integer(), nullable=True, comment='排序顺序'),
    sa.Column('format_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='格式化配置'),
    sa.Column('validation_rules', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='验证规则'),
    sa.Column('lookup_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='查找表配置'),
    sa.Column('enable_aggregation', sa.Boolean(), nullable=True, comment='是否启用聚合'),
    sa.Column('aggregation_functions', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='可用聚合函数'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['data_source_id'], ['config.report_data_sources.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index('idx_ds_field_source_name', 'report_data_source_fields', ['data_source_id', 'field_name'], unique=False, schema='config')
    op.create_index('idx_ds_field_visible_sortable', 'report_data_source_fields', ['is_visible', 'sort_order'], unique=False, schema='config')
    op.create_index(op.f('ix_config_report_data_source_fields_id'), 'report_data_source_fields', ['id'], unique=False, schema='config')
    op.create_table('report_templates',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='模板名称'),
    sa.Column('title', sa.String(length=500), nullable=True, comment='自定义标题'),
    sa.Column('description', sa.Text(), nullable=True, comment='描述'),
    sa.Column('category', sa.String(length=100), nullable=True, comment='分类'),
    sa.Column('data_source_id', sa.BigInteger(), nullable=True, comment='数据源ID'),
    sa.Column('template_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='模板配置'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'),
    sa.Column('is_public', sa.Boolean(), nullable=False, comment='是否公开'),
    sa.Column('sort_order', sa.Integer(), nullable=False, comment='排序顺序'),
    sa.Column('usage_count', sa.Integer(), nullable=False, comment='使用次数'),
    sa.Column('created_by', sa.BigInteger(), nullable=True, comment='创建者'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['created_by'], ['security.users.id'], ),
    sa.ForeignKeyConstraint(['data_source_id'], ['config.report_data_sources.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index(op.f('ix_config_report_templates_id'), 'report_templates', ['id'], unique=False, schema='config')
    op.create_table('calculation_audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operation_type', sa.String(length=50), nullable=False, comment='操作类型'),
    sa.Column('operation_description', sa.Text(), nullable=True, comment='操作描述'),
    sa.Column('payroll_run_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('before_data', sa.JSON(), nullable=True, comment='变更前数据'),
    sa.Column('after_data', sa.JSON(), nullable=True, comment='变更后数据'),
    sa.Column('change_summary', sa.JSON(), nullable=True, comment='变更摘要'),
    sa.Column('operator_id', sa.Integer(), nullable=False, comment='操作人ID'),
    sa.Column('operator_name', sa.String(length=100), nullable=False, comment='操作人姓名'),
    sa.Column('operation_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='操作时间'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='IP地址'),
    sa.Column('user_agent', sa.String(length=500), nullable=True, comment='用户代理'),
    sa.ForeignKeyConstraint(['employee_id'], ['hr.employees.id'], ),
    sa.ForeignKeyConstraint(['payroll_run_id'], ['payroll.payroll_runs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='payroll'
    )
    op.create_index(op.f('ix_payroll_calculation_audit_logs_employee_id'), 'calculation_audit_logs', ['employee_id'], unique=False, schema='payroll')
    op.create_index(op.f('ix_payroll_calculation_audit_logs_id'), 'calculation_audit_logs', ['id'], unique=False, schema='payroll')
    op.create_index(op.f('ix_payroll_calculation_audit_logs_payroll_run_id'), 'calculation_audit_logs', ['payroll_run_id'], unique=False, schema='payroll')
    op.create_table('calculation_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payroll_run_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('component_code', sa.String(length=50), nullable=False, comment='组件代码'),
    sa.Column('rule_set_id', sa.Integer(), nullable=True),
    sa.Column('calculation_rule_id', sa.Integer(), nullable=True),
    sa.Column('calculation_method', sa.String(length=50), nullable=False, comment='计算方法'),
    sa.Column('input_data', sa.JSON(), nullable=True, comment='输入数据'),
    sa.Column('calculation_details', sa.JSON(), nullable=True, comment='计算详情'),
    sa.Column('result_amount', sa.Numeric(precision=15, scale=2), nullable=False, comment='计算结果'),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True, comment='执行时间(毫秒)'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='执行状态'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='错误信息'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['calculation_rule_id'], ['payroll.calculation_rules.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['hr.employees.id'], ),
    sa.ForeignKeyConstraint(['payroll_run_id'], ['payroll.payroll_runs.id'], ),
    sa.ForeignKeyConstraint(['rule_set_id'], ['payroll.calculation_rule_sets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='payroll'
    )
    op.create_index(op.f('ix_payroll_calculation_logs_employee_id'), 'calculation_logs', ['employee_id'], unique=False, schema='payroll')
    op.create_index(op.f('ix_payroll_calculation_logs_id'), 'calculation_logs', ['id'], unique=False, schema='payroll')
    op.create_index(op.f('ix_payroll_calculation_logs_payroll_run_id'), 'calculation_logs', ['payroll_run_id'], unique=False, schema='payroll')
    op.create_table('report_executions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('template_id', sa.BigInteger(), nullable=False),
    sa.Column('execution_params', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='执行参数'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='执行状态'),
    sa.Column('result_count', sa.Integer(), nullable=True, comment='结果数量'),
    sa.Column('execution_time', sa.DECIMAL(precision=10, scale=3), nullable=True, comment='执行时间(秒)'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='错误信息'),
    sa.Column('file_path', sa.String(length=500), nullable=True, comment='导出文件路径'),
    sa.Column('file_size', sa.BigInteger(), nullable=True, comment='文件大小(字节)'),
    sa.Column('file_format', sa.String(length=20), nullable=True, comment='文件格式'),
    sa.Column('executed_by', sa.BigInteger(), nullable=True, comment='执行者'),
    sa.Column('executed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='执行时间'),
    sa.ForeignKeyConstraint(['executed_by'], ['security.users.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['config.report_templates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index(op.f('ix_config_report_executions_id'), 'report_executions', ['id'], unique=False, schema='config')
    op.create_table('report_template_fields',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('template_id', sa.BigInteger(), nullable=False),
    sa.Column('field_name', sa.String(length=100), nullable=False, comment='字段名'),
    sa.Column('field_alias', sa.String(length=100), nullable=True, comment='字段别名'),
    sa.Column('data_source', sa.String(length=50), nullable=False, comment='数据源类型'),
    sa.Column('field_type', sa.String(length=50), nullable=False, comment='字段类型'),
    sa.Column('display_order', sa.Integer(), nullable=True, comment='显示顺序'),
    sa.Column('is_visible', sa.Boolean(), nullable=True, comment='是否可见'),
    sa.Column('is_sortable', sa.Boolean(), nullable=True, comment='是否可排序'),
    sa.Column('is_filterable', sa.Boolean(), nullable=True, comment='是否可筛选'),
    sa.Column('width', sa.Integer(), nullable=True, comment='列宽'),
    sa.Column('formatting_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='格式化配置'),
    sa.Column('calculation_formula', sa.Text(), nullable=True, comment='计算公式'),
    sa.ForeignKeyConstraint(['template_id'], ['config.report_templates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index(op.f('ix_config_report_template_fields_id'), 'report_template_fields', ['id'], unique=False, schema='config')
    op.drop_index('ix_config_report_calculated_fields_id', table_name='report_calculated_fields', schema='reports')
    op.drop_table('report_calculated_fields', schema='reports')
    op.drop_index('ix_config_report_template_fields_id', table_name='report_template_fields', schema='reports')
    op.drop_table('report_template_fields', schema='reports')
    op.drop_index('idx_employees_department_id', table_name='employees', schema='hr')
    op.drop_index('idx_payroll_entries_employee_period', table_name='payroll_entries', schema='payroll')
    op.drop_constraint('fk_payroll_entries_employee_id', 'payroll_entries', schema='payroll', type_='foreignkey')
    op.drop_index('idx_report_view_executions_executed_at', table_name='report_view_executions', schema='reports')
    op.drop_index('idx_report_view_executions_executed_by', table_name='report_view_executions', schema='reports')
    op.drop_index('idx_report_view_executions_view_id', table_name='report_view_executions', schema='reports')
    op.create_index(op.f('ix_reports_report_view_executions_id'), 'report_view_executions', ['id'], unique=False, schema='reports')
    op.drop_index('idx_report_views_category', table_name='report_views', schema='reports')
    op.drop_index('idx_report_views_created_by', table_name='report_views', schema='reports')
    op.drop_index('idx_report_views_name', table_name='report_views', schema='reports')
    op.drop_index('idx_report_views_status', table_name='report_views', schema='reports')
    op.create_index(op.f('ix_reports_report_views_id'), 'report_views', ['id'], unique=False, schema='reports')
    op.drop_constraint('fk_users_employee_id', 'users', schema='security', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('fk_users_employee_id', 'users', 'employees', ['employee_id'], ['id'], source_schema='security', referent_schema='hr')
    op.drop_index(op.f('ix_reports_report_views_id'), table_name='report_views', schema='reports')
    op.create_index('idx_report_views_status', 'report_views', ['view_status'], unique=False, schema='reports')
    op.create_index('idx_report_views_name', 'report_views', ['name'], unique=False, schema='reports')
    op.create_index('idx_report_views_created_by', 'report_views', ['created_by'], unique=False, schema='reports')
    op.create_index('idx_report_views_category', 'report_views', ['category'], unique=False, schema='reports')
    op.drop_index(op.f('ix_reports_report_view_executions_id'), table_name='report_view_executions', schema='reports')
    op.create_index('idx_report_view_executions_view_id', 'report_view_executions', ['report_view_id'], unique=False, schema='reports')
    op.create_index('idx_report_view_executions_executed_by', 'report_view_executions', ['executed_by'], unique=False, schema='reports')
    op.create_index('idx_report_view_executions_executed_at', 'report_view_executions', ['executed_at'], unique=False, schema='reports')
    op.create_foreign_key('fk_payroll_entries_employee_id', 'payroll_entries', 'employees', ['employee_id'], ['id'], source_schema='payroll', referent_schema='hr')
    op.create_index('idx_payroll_entries_employee_period', 'payroll_entries', ['employee_id', 'payroll_period_id'], unique=False, schema='payroll')
    op.create_index('idx_employees_department_id', 'employees', ['department_id'], unique=False, schema='hr')
    op.create_table('report_template_fields',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('template_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('field_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='字段名'),
    sa.Column('field_alias', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='字段别名'),
    sa.Column('data_source', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='数据源类型'),
    sa.Column('field_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='字段类型'),
    sa.Column('display_order', sa.INTEGER(), autoincrement=False, nullable=True, comment='显示顺序'),
    sa.Column('is_visible', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否可见'),
    sa.Column('is_sortable', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否可排序'),
    sa.Column('is_filterable', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否可筛选'),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True, comment='列宽'),
    sa.Column('formatting_config', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='格式化配置'),
    sa.Column('calculation_formula', sa.TEXT(), autoincrement=False, nullable=True, comment='计算公式'),
    sa.PrimaryKeyConstraint('id', name='report_template_fields_pkey'),
    schema='reports'
    )
    op.create_index('ix_config_report_template_fields_id', 'report_template_fields', ['id'], unique=False, schema='reports')
    op.create_table('report_calculated_fields',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='字段名称'),
    sa.Column('alias', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='字段别名'),
    sa.Column('formula', sa.TEXT(), autoincrement=False, nullable=False, comment='计算公式'),
    sa.Column('return_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='返回类型'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='描述'),
    sa.Column('display_name_zh', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='中文显示名称'),
    sa.Column('display_name_en', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='英文显示名称'),
    sa.Column('is_global', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否全局字段'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否激活'),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='分类'),
    sa.Column('created_by', sa.BIGINT(), autoincrement=False, nullable=True, comment='创建者'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['created_by'], ['security.users.id'], name='report_calculated_fields_created_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='report_calculated_fields_pkey'),
    schema='reports'
    )
    op.create_index('ix_config_report_calculated_fields_id', 'report_calculated_fields', ['id'], unique=False, schema='reports')
    op.drop_index(op.f('ix_config_report_template_fields_id'), table_name='report_template_fields', schema='config')
    op.drop_table('report_template_fields', schema='config')
    op.drop_index(op.f('ix_config_report_executions_id'), table_name='report_executions', schema='config')
    op.drop_table('report_executions', schema='config')
    op.drop_index(op.f('ix_payroll_calculation_logs_payroll_run_id'), table_name='calculation_logs', schema='payroll')
    op.drop_index(op.f('ix_payroll_calculation_logs_id'), table_name='calculation_logs', schema='payroll')
    op.drop_index(op.f('ix_payroll_calculation_logs_employee_id'), table_name='calculation_logs', schema='payroll')
    op.drop_table('calculation_logs', schema='payroll')
    op.drop_index(op.f('ix_payroll_calculation_audit_logs_payroll_run_id'), table_name='calculation_audit_logs', schema='payroll')
    op.drop_index(op.f('ix_payroll_calculation_audit_logs_id'), table_name='calculation_audit_logs', schema='payroll')
    op.drop_index(op.f('ix_payroll_calculation_audit_logs_employee_id'), table_name='calculation_audit_logs', schema='payroll')
    op.drop_table('calculation_audit_logs', schema='payroll')
    op.drop_index(op.f('ix_config_report_templates_id'), table_name='report_templates', schema='config')
    op.drop_table('report_templates', schema='config')
    op.drop_index(op.f('ix_config_report_data_source_fields_id'), table_name='report_data_source_fields', schema='config')
    op.drop_index('idx_ds_field_visible_sortable', table_name='report_data_source_fields', schema='config')
    op.drop_index('idx_ds_field_source_name', table_name='report_data_source_fields', schema='config')
    op.drop_table('report_data_source_fields', schema='config')
    op.drop_index(op.f('ix_config_report_data_source_access_logs_id'), table_name='report_data_source_access_logs', schema='config')
    op.drop_table('report_data_source_access_logs', schema='config')
    op.drop_index('uq_user_preference', table_name='report_user_preferences', schema='config')
    op.drop_index(op.f('ix_config_report_user_preferences_id'), table_name='report_user_preferences', schema='config')
    op.drop_index('idx_user_preferences_user', table_name='report_user_preferences', schema='config')
    op.drop_index('idx_user_preferences_type', table_name='report_user_preferences', schema='config')
    op.drop_table('report_user_preferences', schema='config')
    op.drop_index(op.f('ix_config_report_permissions_id'), table_name='report_permissions', schema='config')
    op.drop_index('idx_report_permissions_type', table_name='report_permissions', schema='config')
    op.drop_index('idx_report_permissions_subject', table_name='report_permissions', schema='config')
    op.drop_index('idx_report_permissions_object', table_name='report_permissions', schema='config')
    op.drop_table('report_permissions', schema='config')
    op.drop_index(op.f('ix_config_report_data_sources_id'), table_name='report_data_sources', schema='config')
    op.drop_index('idx_data_source_type_active', table_name='report_data_sources', schema='config')
    op.drop_index('idx_data_source_schema_table', table_name='report_data_sources', schema='config')
    op.drop_index('idx_data_source_category', table_name='report_data_sources', schema='config')
    op.drop_table('report_data_sources', schema='config')
    op.drop_index(op.f('ix_config_report_calculated_fields_id'), table_name='report_calculated_fields', schema='config')
    op.drop_table('report_calculated_fields', schema='config')
    op.drop_index(op.f('ix_attendance_daily_attendance_records_id'), table_name='daily_attendance_records', schema='attendance')
    op.drop_index(op.f('ix_attendance_daily_attendance_records_employee_id'), table_name='daily_attendance_records', schema='attendance')
    op.drop_index(op.f('ix_attendance_daily_attendance_records_attendance_record_id'), table_name='daily_attendance_records', schema='attendance')
    op.drop_table('daily_attendance_records', schema='attendance')
    op.drop_index(op.f('ix_payroll_employee_salary_configs_id'), table_name='employee_salary_configs', schema='payroll')
    op.drop_index(op.f('ix_payroll_employee_salary_configs_employee_id'), table_name='employee_salary_configs', schema='payroll')
    op.drop_table('employee_salary_configs', schema='payroll')
    op.drop_index(op.f('ix_attendance_attendance_records_period_id'), table_name='attendance_records', schema='attendance')
    op.drop_index(op.f('ix_attendance_attendance_records_id'), table_name='attendance_records', schema='attendance')
    op.drop_index(op.f('ix_attendance_attendance_records_employee_id'), table_name='attendance_records', schema='attendance')
    op.drop_table('attendance_records', schema='attendance')
    op.drop_index(op.f('ix_payroll_payroll_component_configs_id'), table_name='payroll_component_configs', schema='payroll')
    op.drop_table('payroll_component_configs', schema='payroll')
    op.drop_index(op.f('ix_payroll_calculation_templates_id'), table_name='calculation_templates', schema='payroll')
    op.drop_table('calculation_templates', schema='payroll')
    op.drop_index(op.f('ix_payroll_calculation_rules_rule_set_id'), table_name='calculation_rules', schema='payroll')
    op.drop_index(op.f('ix_payroll_calculation_rules_id'), table_name='calculation_rules', schema='payroll')
    op.drop_table('calculation_rules', schema='payroll')
    op.drop_index(op.f('ix_payroll_tax_configs_id'), table_name='tax_configs', schema='payroll')
    op.drop_table('tax_configs', schema='payroll')
    op.drop_index(op.f('ix_payroll_social_insurance_configs_id'), table_name='social_insurance_configs', schema='payroll')
    op.drop_table('social_insurance_configs', schema='payroll')
    op.drop_index(op.f('ix_payroll_calculation_rule_sets_id'), table_name='calculation_rule_sets', schema='payroll')
    op.drop_table('calculation_rule_sets', schema='payroll')
    op.drop_index(op.f('ix_attendance_attendance_rules_id'), table_name='attendance_rules', schema='attendance')
    op.drop_table('attendance_rules', schema='attendance')
    op.drop_index(op.f('ix_attendance_attendance_periods_id'), table_name='attendance_periods', schema='attendance')
    op.drop_table('attendance_periods', schema='attendance')
    # ### end Alembic commands ###
