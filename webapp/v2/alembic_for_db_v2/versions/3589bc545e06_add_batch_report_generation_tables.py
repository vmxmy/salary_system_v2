"""add_batch_report_generation_tables

Revision ID: 3589bc545e06
Revises: fd0b00beab27
Create Date: 2025-06-08 03:29:19.065198

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3589bc545e06'
down_revision: Union[str, None] = 'fd0b00beab27'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('departments')
    op.drop_table('employees')
    op.drop_index('idx_audit_rules_category_enabled', table_name='audit_rule_configurations', schema='payroll')
    op.drop_index('idx_audit_rules_effective_date', table_name='audit_rule_configurations', schema='payroll')
    op.drop_index('idx_monthly_snapshots_audit_status', table_name='monthly_payroll_snapshots', schema='payroll')
    op.drop_index('idx_monthly_snapshots_deductions_gin', table_name='monthly_payroll_snapshots', schema='payroll', postgresql_using='gin')
    op.drop_index('idx_monthly_snapshots_earnings_gin', table_name='monthly_payroll_snapshots', schema='payroll', postgresql_using='gin')
    op.drop_index('idx_monthly_snapshots_period_employee', table_name='monthly_payroll_snapshots', schema='payroll')
    op.drop_index('idx_monthly_snapshots_snapshot_date', table_name='monthly_payroll_snapshots', schema='payroll')
    op.drop_constraint('uq_monthly_snapshot_period_employee', 'monthly_payroll_snapshots', schema='payroll', type_='unique')
    op.drop_index('idx_audit_anomalies_can_auto_fix', table_name='payroll_audit_anomalies', schema='payroll')
    op.drop_index('idx_audit_anomalies_created_at', table_name='payroll_audit_anomalies', schema='payroll')
    op.drop_index('idx_audit_anomalies_employee', table_name='payroll_audit_anomalies', schema='payroll')
    op.drop_index('idx_audit_anomalies_is_ignored', table_name='payroll_audit_anomalies', schema='payroll')
    op.drop_index('idx_audit_anomalies_payroll_entry', table_name='payroll_audit_anomalies', schema='payroll')
    op.drop_index('idx_audit_anomalies_payroll_run', table_name='payroll_audit_anomalies', schema='payroll')
    op.drop_index('idx_audit_anomalies_type_severity', table_name='payroll_audit_anomalies', schema='payroll')
    op.drop_index('idx_audit_history_auditor_timestamp', table_name='payroll_audit_history', schema='payroll')
    op.drop_index('idx_audit_history_payroll_entry', table_name='payroll_audit_history', schema='payroll')
    op.drop_index('idx_audit_history_payroll_run', table_name='payroll_audit_history', schema='payroll')
    op.drop_index('idx_audit_history_result_gin', table_name='payroll_audit_history', schema='payroll', postgresql_using='gin')
    op.drop_index('idx_audit_history_type_status', table_name='payroll_audit_history', schema='payroll')
    op.drop_index('idx_payroll_entries_audit_status', table_name='payroll_entries', schema='payroll')
    op.drop_index('idx_payroll_entries_audit_timestamp', table_name='payroll_entries', schema='payroll')
    op.drop_index('idx_payroll_entries_auditor_id', table_name='payroll_entries', schema='payroll')
    op.drop_index('idx_payroll_entries_calculated_at', table_name='payroll_entries', schema='payroll')
    op.drop_index('idx_payroll_entries_calculation_inputs_gin', table_name='payroll_entries', schema='payroll', postgresql_using='gin')
    op.drop_index('idx_payroll_entries_deductions_details_gin', table_name='payroll_entries', schema='payroll', postgresql_using='gin')
    op.drop_index('idx_payroll_entries_earnings_details_gin', table_name='payroll_entries', schema='payroll', postgresql_using='gin')
    op.drop_index('idx_payroll_entries_employee_period', table_name='payroll_entries', schema='payroll')
    op.drop_index('idx_payroll_entries_period_run', table_name='payroll_entries', schema='payroll')
    op.drop_index('idx_audit_summary_anomalies_by_type_gin', table_name='payroll_run_audit_summary', schema='payroll', postgresql_using='gin')
    op.drop_index('idx_audit_summary_created_at', table_name='payroll_run_audit_summary', schema='payroll')
    op.drop_index('idx_audit_summary_details_gin', table_name='payroll_run_audit_summary', schema='payroll', postgresql_using='gin')
    op.drop_index('idx_audit_summary_payroll_run', table_name='payroll_run_audit_summary', schema='payroll')
    op.drop_index('idx_audit_summary_status', table_name='payroll_run_audit_summary', schema='payroll')
    op.drop_index('idx_audit_summary_type', table_name='payroll_run_audit_summary', schema='payroll')
    op.drop_constraint('uq_audit_summary_payroll_run_type', 'payroll_run_audit_summary', schema='payroll', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('uq_audit_summary_payroll_run_type', 'payroll_run_audit_summary', ['payroll_run_id', 'audit_type'], schema='payroll', postgresql_nulls_not_distinct=False)
    op.create_index('idx_audit_summary_type', 'payroll_run_audit_summary', ['audit_type'], unique=False, schema='payroll')
    op.create_index('idx_audit_summary_status', 'payroll_run_audit_summary', ['audit_status'], unique=False, schema='payroll')
    op.create_index('idx_audit_summary_payroll_run', 'payroll_run_audit_summary', ['payroll_run_id'], unique=False, schema='payroll')
    op.create_index('idx_audit_summary_details_gin', 'payroll_run_audit_summary', ['audit_details'], unique=False, schema='payroll', postgresql_using='gin')
    op.create_index('idx_audit_summary_created_at', 'payroll_run_audit_summary', ['created_at'], unique=False, schema='payroll')
    op.create_index('idx_audit_summary_anomalies_by_type_gin', 'payroll_run_audit_summary', ['anomalies_by_type'], unique=False, schema='payroll', postgresql_using='gin')
    op.create_index('idx_payroll_entries_period_run', 'payroll_entries', ['payroll_period_id', 'payroll_run_id'], unique=False, schema='payroll')
    op.create_index('idx_payroll_entries_employee_period', 'payroll_entries', ['employee_id', 'payroll_period_id'], unique=False, schema='payroll')
    op.create_index('idx_payroll_entries_earnings_details_gin', 'payroll_entries', ['earnings_details'], unique=False, schema='payroll', postgresql_using='gin')
    op.create_index('idx_payroll_entries_deductions_details_gin', 'payroll_entries', ['deductions_details'], unique=False, schema='payroll', postgresql_using='gin')
    op.create_index('idx_payroll_entries_calculation_inputs_gin', 'payroll_entries', ['calculation_inputs'], unique=False, schema='payroll', postgresql_using='gin')
    op.create_index('idx_payroll_entries_calculated_at', 'payroll_entries', ['calculated_at'], unique=False, schema='payroll')
    op.create_index('idx_payroll_entries_auditor_id', 'payroll_entries', ['auditor_id'], unique=False, schema='payroll')
    op.create_index('idx_payroll_entries_audit_timestamp', 'payroll_entries', ['audit_timestamp'], unique=False, schema='payroll')
    op.create_index('idx_payroll_entries_audit_status', 'payroll_entries', ['audit_status'], unique=False, schema='payroll')
    op.create_index('idx_audit_history_type_status', 'payroll_audit_history', ['audit_type', 'audit_status'], unique=False, schema='payroll')
    op.create_index('idx_audit_history_result_gin', 'payroll_audit_history', ['audit_result'], unique=False, schema='payroll', postgresql_using='gin')
    op.create_index('idx_audit_history_payroll_run', 'payroll_audit_history', ['payroll_run_id'], unique=False, schema='payroll')
    op.create_index('idx_audit_history_payroll_entry', 'payroll_audit_history', ['payroll_entry_id'], unique=False, schema='payroll')
    op.create_index('idx_audit_history_auditor_timestamp', 'payroll_audit_history', ['auditor_id', 'audit_timestamp'], unique=False, schema='payroll')
    op.create_index('idx_audit_anomalies_type_severity', 'payroll_audit_anomalies', ['anomaly_type', 'severity'], unique=False, schema='payroll')
    op.create_index('idx_audit_anomalies_payroll_run', 'payroll_audit_anomalies', ['payroll_run_id'], unique=False, schema='payroll')
    op.create_index('idx_audit_anomalies_payroll_entry', 'payroll_audit_anomalies', ['payroll_entry_id'], unique=False, schema='payroll')
    op.create_index('idx_audit_anomalies_is_ignored', 'payroll_audit_anomalies', ['is_ignored'], unique=False, schema='payroll')
    op.create_index('idx_audit_anomalies_employee', 'payroll_audit_anomalies', ['employee_id'], unique=False, schema='payroll')
    op.create_index('idx_audit_anomalies_created_at', 'payroll_audit_anomalies', ['created_at'], unique=False, schema='payroll')
    op.create_index('idx_audit_anomalies_can_auto_fix', 'payroll_audit_anomalies', ['can_auto_fix'], unique=False, schema='payroll')
    op.create_unique_constraint('uq_monthly_snapshot_period_employee', 'monthly_payroll_snapshots', ['period_id', 'employee_id'], schema='payroll', postgresql_nulls_not_distinct=False)
    op.create_index('idx_monthly_snapshots_snapshot_date', 'monthly_payroll_snapshots', ['snapshot_date'], unique=False, schema='payroll')
    op.create_index('idx_monthly_snapshots_period_employee', 'monthly_payroll_snapshots', ['period_id', 'employee_id'], unique=False, schema='payroll')
    op.create_index('idx_monthly_snapshots_earnings_gin', 'monthly_payroll_snapshots', ['earnings_details'], unique=False, schema='payroll', postgresql_using='gin')
    op.create_index('idx_monthly_snapshots_deductions_gin', 'monthly_payroll_snapshots', ['deductions_details'], unique=False, schema='payroll', postgresql_using='gin')
    op.create_index('idx_monthly_snapshots_audit_status', 'monthly_payroll_snapshots', ['audit_status'], unique=False, schema='payroll')
    op.create_index('idx_audit_rules_effective_date', 'audit_rule_configurations', ['effective_date', 'end_date'], unique=False, schema='payroll')
    op.create_index('idx_audit_rules_category_enabled', 'audit_rule_configurations', ['rule_category', 'is_enabled'], unique=False, schema='payroll')
    op.create_table('employees',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('employee_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('gender_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('id_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nationality', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hire_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('employment_type_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('education_level_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('marital_status_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('political_status_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('contract_type_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('home_address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('emergency_contact_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('emergency_contact_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('department_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ethnicity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_work_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('interrupted_service_years', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('personnel_category_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('actual_position_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('career_position_level_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('current_position_start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('salary_level_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('salary_grade_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ref_salary_level_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('job_position_level_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='employees_department_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='employees_pkey')
    )
    op.create_table('departments',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('parent_department_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('effective_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='departments_pkey')
    )
    # ### end Alembic commands ###
