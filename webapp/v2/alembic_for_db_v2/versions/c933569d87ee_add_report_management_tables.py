"""add_report_management_tables

Revision ID: c933569d87ee
Revises: 51287468b666
Create Date: 2025-05-29 02:41:54.352827

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c933569d87ee'
down_revision: Union[str, None] = '51287468b666'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('report_data_sources',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='数据源名称'),
    sa.Column('table_name', sa.String(length=255), nullable=False, comment='数据表名'),
    sa.Column('schema_name', sa.String(length=100), nullable=False, comment='模式名'),
    sa.Column('description', sa.Text(), nullable=True, comment='数据源描述'),
    sa.Column('is_active', sa.Boolean(), server_default='TRUE', nullable=False, comment='是否激活'),
    sa.Column('sort_order', sa.Integer(), server_default='0', nullable=False, comment='排序顺序'),
    sa.Column('access_permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='访问权限配置'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('schema_name', 'table_name', name='uq_data_source_schema_table'),
    schema='config'
    )
    op.create_table('calculated_fields',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='计算字段名称'),
    sa.Column('alias', sa.String(length=255), nullable=False, comment='字段别名'),
    sa.Column('formula', sa.Text(), nullable=False, comment='计算公式'),
    sa.Column('return_type', sa.String(length=50), nullable=False, comment='返回类型'),
    sa.Column('description', sa.Text(), nullable=True, comment='字段描述'),
    sa.Column('created_by', sa.BigInteger(), nullable=False, comment='创建者'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='更新时间'),
    sa.Column('is_global', sa.Boolean(), server_default='FALSE', nullable=False, comment='是否全局可用'),
    sa.Column('is_active', sa.Boolean(), server_default='TRUE', nullable=False, comment='是否激活'),
    sa.Column('category', sa.String(length=100), nullable=True, comment='字段分类'),
    sa.ForeignKeyConstraint(['created_by'], ['security.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'created_by', name='uq_calculated_field_name_user'),
    schema='config'
    )
    op.create_table('report_templates',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='报表名称'),
    sa.Column('title', sa.String(length=500), nullable=True, comment='自定义标题'),
    sa.Column('description', sa.Text(), nullable=True, comment='报表描述'),
    sa.Column('category', sa.String(length=100), nullable=True, comment='报表分类'),
    sa.Column('template_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='报表配置JSON'),
    sa.Column('created_by', sa.BigInteger(), nullable=False, comment='创建者'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='更新时间'),
    sa.Column('is_active', sa.Boolean(), server_default='TRUE', nullable=False, comment='是否激活'),
    sa.Column('is_public', sa.Boolean(), server_default='FALSE', nullable=False, comment='是否公开模板'),
    sa.Column('sort_order', sa.Integer(), server_default='0', nullable=False, comment='排序顺序'),
    sa.ForeignKeyConstraint(['created_by'], ['security.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_table('report_fields',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('template_id', sa.BigInteger(), nullable=False, comment='报表模板ID'),
    sa.Column('field_name', sa.String(length=255), nullable=False, comment='字段名称'),
    sa.Column('field_alias', sa.String(length=255), nullable=True, comment='自定义字段别名'),
    sa.Column('data_source', sa.String(length=255), nullable=False, comment='数据源表名'),
    sa.Column('field_type', sa.String(length=50), nullable=False, comment='字段类型'),
    sa.Column('display_order', sa.Integer(), server_default='0', nullable=False, comment='显示顺序'),
    sa.Column('is_visible', sa.Boolean(), server_default='TRUE', nullable=False, comment='是否可见'),
    sa.Column('formatting_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='格式化配置'),
    sa.Column('calculation_formula', sa.Text(), nullable=True, comment='计算公式'),
    sa.Column('width', sa.Integer(), nullable=True, comment='列宽度'),
    sa.Column('is_sortable', sa.Boolean(), server_default='TRUE', nullable=False, comment='是否可排序'),
    sa.Column('is_filterable', sa.Boolean(), server_default='TRUE', nullable=False, comment='是否可筛选'),
    sa.ForeignKeyConstraint(['template_id'], ['config.report_templates.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.alter_column('employees', 'employee_code',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               schema='hr')
    op.drop_constraint('fk_payroll_period_status', 'payroll_periods', schema='payroll', type_='foreignkey')
    op.create_foreign_key(None, 'payroll_periods', 'lookup_values', ['status_lookup_value_id'], ['id'], source_schema='payroll', referent_schema='config', ondelete='RESTRICT')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'payroll_periods', schema='payroll', type_='foreignkey')
    op.create_foreign_key('fk_payroll_period_status', 'payroll_periods', 'lookup_values', ['status_lookup_value_id'], ['id'], source_schema='payroll', referent_schema='config')
    op.alter_column('employees', 'employee_code',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               schema='hr')
    op.drop_table('report_fields', schema='config')
    op.drop_table('report_templates', schema='config')
    op.drop_table('calculated_fields', schema='config')
    op.drop_table('report_data_sources', schema='config')
    # ### end Alembic commands ###
