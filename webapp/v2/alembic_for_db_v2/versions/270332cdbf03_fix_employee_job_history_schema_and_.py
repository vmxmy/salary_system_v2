"""fix_employee_job_history_schema_and_timestamps

Revision ID: 270332cdbf03
Revises: 52b49ef5e60c
Create Date: 2025-05-22 13:57:44.350256

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # 确保导入


# revision identifiers, used by Alembic.
revision: str = '270332cdbf03'
down_revision: Union[str, None] = '52b49ef5e60c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_column('employee_job_history', 'job_title_id', schema='hr') # Column might already be dropped
    op.add_column('employee_job_history', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), schema='hr')
    op.add_column('employee_job_history', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, onupdate=sa.text('CURRENT_TIMESTAMP')), schema='hr')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('employee_job_history', 'updated_at', schema='hr')
    op.drop_column('employee_job_history', 'created_at', schema='hr')
    # 考虑到 job_title_id 原本是非空，恢复时也应如此。类型暂定为Integer，如果之前是其他类型，需要调整。
    # 如果 job_title_id 是外键，恢复时还需要添加 ForeignKeyConstraint。
    # 基于错误信息 "null value in column \\"job_title_id\\" of relation \\"employee_job_history\\" violates not-null constraint"
    # 我们假设它是一个 Integer 类型的非空列。
    op.add_column('employee_job_history', sa.Column('job_title_id', sa.INTEGER(), autoincrement=False, nullable=False), schema='hr')
    # ### end Alembic commands ###
