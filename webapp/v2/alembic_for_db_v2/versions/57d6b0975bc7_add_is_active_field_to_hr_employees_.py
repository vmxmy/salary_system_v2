"""Add is_active field to hr.employees table

Revision ID: 57d6b0975bc7
Revises: 9005681d3efc
Create Date: 2025-06-02 19:46:54.045804

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '57d6b0975bc7'
down_revision: Union[str, None] = '9005681d3efc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 首先添加字段为可空
    op.add_column('employees', sa.Column('is_active', sa.Boolean(), nullable=True, comment='员工是否激活'), schema='hr')
    
    # 为现有记录设置默认值
    op.execute("UPDATE hr.employees SET is_active = true WHERE is_active IS NULL")
    
    # 然后将字段设置为非空
    op.alter_column('employees', 'is_active', nullable=False, schema='hr')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('employees', 'is_active', schema='hr')
    op.create_table('departments',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('parent_department_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('effective_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='departments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('employees',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('employee_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('gender_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('id_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nationality', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hire_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('employment_type_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('education_level_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('marital_status_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('political_status_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('contract_type_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('home_address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('emergency_contact_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('emergency_contact_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('department_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ethnicity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_work_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('interrupted_service_years', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('personnel_category_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('actual_position_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('career_position_level_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('current_position_start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('salary_level_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('salary_grade_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ref_salary_level_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('job_position_level_lookup_value_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='employees_department_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='employees_pkey')
    )
    # ### end Alembic commands ###
