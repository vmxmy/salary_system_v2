"""add_status_lookup_value_id_to_payroll_periods

Revision ID: 965982a6f0cb
Revises: 270332cdbf03
Create Date: 2025-05-22 23:12:10.890314

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision: str = '965982a6f0cb'
down_revision: Union[str, None] = '270332cdbf03'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # 1. 添加PAYROLL_PERIOD_STATUS查找类型
    conn = op.get_bind()
    
    # 检查lookup_type是否已存在
    result = conn.execute(text(
        "SELECT id FROM config.lookup_types WHERE code = 'PAYROLL_PERIOD_STATUS'"
    )).fetchone()
    
    if not result:
        # 创建lookup_type
        lookup_type_id = conn.execute(text(
            """
            INSERT INTO config.lookup_types (code, name, description)
            VALUES ('PAYROLL_PERIOD_STATUS', '薪资周期状态', '薪资周期的可能状态值')
            RETURNING id
            """
        )).fetchone()[0]
        
        # 添加lookup_values
        conn.execute(text(
            """
            INSERT INTO config.lookup_values 
            (lookup_type_id, code, name, description, sort_order, is_active)
            VALUES
            (:type_id, 'ACTIVE', '活动', '当前可用于薪资计算的周期', 10, true),
            (:type_id, 'CLOSED', '已关闭', '薪资计算已完成的周期', 20, true),
            (:type_id, 'ARCHIVED', '已归档', '历史周期，不再显示在主视图中', 30, true),
            (:type_id, 'PLANNED', '计划中', '尚未开始的未来薪资周期', 5, true)
            """
        ), {'type_id': lookup_type_id})
    else:
        lookup_type_id = result[0]
    
    # 2. 添加status_lookup_value_id字段到payroll_periods表
    op.add_column('payroll_periods',
                  sa.Column('status_lookup_value_id', sa.BigInteger(), nullable=True),
                  schema='payroll')
    
    # 3. 添加外键约束
    op.create_foreign_key(
        'fk_payroll_period_status',
        'payroll_periods', 'lookup_values',
        ['status_lookup_value_id'], ['id'],
        source_schema='payroll', referent_schema='config'
    )
    
    # 4. 数据迁移：基于现有status字段值设置status_lookup_value_id
    conn.execute(text(
        """
        UPDATE payroll.payroll_periods p
        SET status_lookup_value_id = lv.id
        FROM config.lookup_values lv
        JOIN config.lookup_types lt ON lv.lookup_type_id = lt.id
        WHERE lt.code = 'PAYROLL_PERIOD_STATUS'
        AND UPPER(p.status::text) = UPPER(lv.code)
        """
    ))

    # 添加自动生成的其他Alembic命令
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('lookup_types', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='config')
    op.alter_column('lookup_types', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique code for the lookup type',
               existing_nullable=False,
               schema='config')
    op.alter_column('lookup_types', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Human-readable name for the lookup type',
               existing_nullable=False,
               schema='config')
    op.alter_column('lookup_types', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Description of the lookup type',
               existing_nullable=True,
               schema='config')
    op.alter_column('lookup_values', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='config')
    op.alter_column('lookup_values', 'lookup_type_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to lookup_types',
               existing_nullable=False,
               schema='config')
    op.alter_column('lookup_values', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique code for the lookup value within its type',
               existing_nullable=False,
               schema='config')
    op.alter_column('lookup_values', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Human-readable name for the lookup value',
               existing_nullable=False,
               schema='config')
    op.alter_column('lookup_values', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Description of the lookup value',
               existing_nullable=True,
               schema='config')
    op.alter_column('lookup_values', 'sort_order',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Order for displaying values',
               existing_nullable=False,
               existing_server_default=sa.text('0'),
               schema='config')
    op.alter_column('lookup_values', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether the lookup value is active',
               existing_nullable=False,
               existing_server_default=sa.text('true'),
               schema='config')
    op.alter_column('payroll_component_definitions', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='config')
    op.alter_column('payroll_component_definitions', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique code for the component',
               existing_nullable=False,
               schema='config')
    op.alter_column('payroll_component_definitions', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Name of the component (e.g., Basic Salary, Income Tax)',
               existing_nullable=False,
               schema='config')
    op.alter_column('payroll_component_definitions', 'type',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='Component type (Earning or Deduction)',
               existing_nullable=False,
               schema='config')
    op.alter_column('payroll_component_definitions', 'calculation_method',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Method used for calculation (e.g., FixedAmount, Percentage, Formula)',
               existing_nullable=True,
               schema='config')
    op.alter_column('payroll_component_definitions', 'calculation_parameters',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment=None,
               existing_comment='Parameters for the calculation method',
               existing_nullable=True,
               schema='config')
    op.alter_column('payroll_component_definitions', 'is_taxable',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether this component is subject to income tax',
               existing_nullable=False,
               existing_server_default=sa.text('true'),
               schema='config')
    op.alter_column('payroll_component_definitions', 'is_social_security_base',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether this component contributes to social security base',
               existing_nullable=False,
               existing_server_default=sa.text('false'),
               schema='config')
    op.alter_column('payroll_component_definitions', 'is_housing_fund_base',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether this component contributes to housing fund base',
               existing_nullable=False,
               existing_server_default=sa.text('false'),
               schema='config')
    op.alter_column('payroll_component_definitions', 'display_order',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Order for displaying on payslip',
               existing_nullable=False,
               existing_server_default=sa.text('0'),
               schema='config')
    op.alter_column('payroll_component_definitions', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether this component is active',
               existing_nullable=False,
               existing_server_default=sa.text('true'),
               schema='config')
    op.alter_column('payroll_component_definitions', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Definition effective date',
               existing_nullable=False,
               schema='config')
    op.alter_column('payroll_component_definitions', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Definition end date',
               existing_nullable=True,
               schema='config')
    op.alter_column('social_security_rates', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='config')
    op.alter_column('social_security_rates', 'region_code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Region code (e.g., CN-Shanghai)',
               existing_nullable=False,
               schema='config')
    op.alter_column('social_security_rates', 'contribution_type',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Contribution type (e.g., Pension, Medical, HousingFund)',
               existing_nullable=False,
               schema='config')
    op.alter_column('social_security_rates', 'participant_type',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='Participant (Employee or Employer)',
               existing_nullable=False,
               schema='config')
    op.alter_column('social_security_rates', 'rate',
               existing_type=sa.NUMERIC(precision=5, scale=4),
               comment=None,
               existing_comment='Contribution rate as a decimal',
               existing_nullable=False,
               schema='config')
    op.alter_column('social_security_rates', 'base_min',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Contribution base minimum',
               existing_nullable=True,
               schema='config')
    op.alter_column('social_security_rates', 'base_max',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Contribution base maximum',
               existing_nullable=True,
               schema='config')
    op.alter_column('social_security_rates', 'fixed_amount',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Fixed contribution amount if applicable',
               existing_nullable=False,
               existing_server_default=sa.text("'0'::numeric"),
               schema='config')
    op.alter_column('social_security_rates', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Rate effective date',
               existing_nullable=False,
               schema='config')
    op.alter_column('social_security_rates', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Rate end date',
               existing_nullable=True,
               schema='config')
    op.alter_column('system_parameters', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='config')
    op.alter_column('system_parameters', 'key',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Unique parameter key',
               existing_nullable=False,
               schema='config')
    op.alter_column('system_parameters', 'value',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Parameter value',
               existing_nullable=False,
               schema='config')
    op.alter_column('system_parameters', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Description of the parameter',
               existing_nullable=True,
               schema='config')
    op.alter_column('tax_brackets', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='config')
    op.alter_column('tax_brackets', 'region_code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Region code (e.g., CN, US-CA)',
               existing_nullable=False,
               schema='config')
    op.alter_column('tax_brackets', 'tax_type',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Type of tax (e.g., IncomeTax)',
               existing_nullable=False,
               schema='config')
    op.alter_column('tax_brackets', 'income_range_start',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Income range start amount',
               existing_nullable=False,
               schema='config')
    op.alter_column('tax_brackets', 'income_range_end',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Income range end amount (null for highest bracket)',
               existing_nullable=True,
               schema='config')
    op.alter_column('tax_brackets', 'tax_rate',
               existing_type=sa.NUMERIC(precision=5, scale=4),
               comment=None,
               existing_comment='Tax rate as a decimal (e.g., 0.03)',
               existing_nullable=False,
               schema='config')
    op.alter_column('tax_brackets', 'quick_deduction',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Quick deduction amount',
               existing_nullable=False,
               existing_server_default=sa.text("'0'::numeric"),
               schema='config')
    op.alter_column('tax_brackets', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Bracket effective date',
               existing_nullable=False,
               schema='config')
    op.alter_column('tax_brackets', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Bracket end date',
               existing_nullable=True,
               schema='config')
    op.alter_column('departments', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('departments', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique department code',
               existing_nullable=False,
               schema='hr')
    op.alter_column('departments', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Department name',
               existing_nullable=False,
               schema='hr')
    op.alter_column('departments', 'parent_department_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to parent department (for hierarchy)',
               existing_nullable=True,
               schema='hr')
    op.alter_column('departments', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Department structure effective date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('departments', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Department structure end date',
               existing_nullable=True,
               schema='hr')
    op.alter_column('departments', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether the department is currently active',
               existing_nullable=False,
               existing_server_default=sa.text('true'),
               schema='hr')
    op.drop_index('ix_hr_employee_bank_accounts_employee_id', table_name='employee_bank_accounts', schema='hr')
    op.drop_constraint('uq_hr_employee_bank_account_number', 'employee_bank_accounts', schema='hr', type_='unique')
    op.drop_index('uq_hr_employee_bank_accounts_employee_id_is_primary', table_name='employee_bank_accounts', schema='hr', postgresql_where='(is_primary IS TRUE)')
    op.create_unique_constraint('uq_employee_bank_account_number', 'employee_bank_accounts', ['employee_id', 'account_number'], schema='hr')
    op.alter_column('employee_compensation_history', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('employee_compensation_history', 'employee_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to employees',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_compensation_history', 'salary_amount',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Salary amount',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_compensation_history', 'currency',
               existing_type=sa.VARCHAR(length=10),
               comment=None,
               existing_comment='Currency code (e.g., CNY, USD)',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_compensation_history', 'pay_frequency_lookup_value_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to pay frequency lookup value',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_compensation_history', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Compensation effective date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_compensation_history', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Compensation end date',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_contracts', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('employee_contracts', 'employee_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to employees',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_contracts', 'contract_type_lookup_value_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to contract type lookup value',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_contracts', 'contract_start_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Contract start date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_contracts', 'contract_end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Contract end date',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_contracts', 'signing_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Contract signing date',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_contracts', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Record effective date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_contracts', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Record end date',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_job_history', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('employee_job_history', 'employee_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to employees',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_job_history', 'department_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to departments at this period',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_job_history', 'position_id',
               existing_type=sa.BIGINT(),
               nullable=False,
               schema='hr')
    op.alter_column('employee_job_history', 'manager_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to manager employee at this period',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_job_history', 'location',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Work location at this period',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_job_history', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Record effective date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_job_history', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Record end date',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_leave_balances', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('employee_leave_balances', 'employee_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to employees',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_leave_balances', 'leave_type_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to leave_types',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_leave_balances', 'balance_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Date for which the balance is recorded',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_leave_balances', 'hours_accrued',
               existing_type=sa.NUMERIC(precision=8, scale=4),
               comment=None,
               existing_comment='Hours accrued up to this date',
               existing_nullable=False,
               existing_server_default=sa.text("'0'::numeric"),
               schema='hr')
    op.alter_column('employee_leave_balances', 'hours_taken',
               existing_type=sa.NUMERIC(precision=8, scale=4),
               comment=None,
               existing_comment='Hours taken up to this date',
               existing_nullable=False,
               existing_server_default=sa.text("'0'::numeric"),
               schema='hr')
    op.alter_column('employee_leave_balances', 'hours_adjusted',
               existing_type=sa.NUMERIC(precision=8, scale=4),
               comment=None,
               existing_comment='Hours adjusted (manual, carry-over) up to this date',
               existing_nullable=False,
               existing_server_default=sa.text("'0'::numeric"),
               schema='hr')
    op.alter_column('employee_leave_balances', 'current_balance',
               existing_type=sa.NUMERIC(precision=8, scale=4),
               comment=None,
               existing_comment='Current balance (accrued - taken + adjusted)',
               existing_nullable=False,
               existing_server_default=sa.text("'0'::numeric"),
               schema='hr')
    op.alter_column('employee_leave_balances', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Balance record effective date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_leave_balances', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Balance record end date',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_leave_requests', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('employee_leave_requests', 'employee_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to employees',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_leave_requests', 'leave_type_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to leave_types',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_leave_requests', 'start_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Leave start date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_leave_requests', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Leave end date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_leave_requests', 'requested_hours',
               existing_type=sa.NUMERIC(precision=8, scale=4),
               comment=None,
               existing_comment='Total hours requested',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_leave_requests', 'status_lookup_value_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to leave request status lookup value (e.g., Pending, Approved, Rejected)',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_leave_requests', 'requested_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Request timestamp',
               existing_nullable=False,
               existing_server_default=sa.text('now()'),
               schema='hr')
    op.alter_column('employee_leave_requests', 'approved_by_employee_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to employee who approved (if approved)',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_leave_requests', 'approved_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Approval timestamp',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_leave_requests', 'rejection_reason',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Reason for rejection',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_payroll_components', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('employee_payroll_components', 'employee_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to employees',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_payroll_components', 'component_definition_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to payroll_component_definitions',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_payroll_components', 'fixed_amount',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Fixed amount for this component if applicable to this employee',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_payroll_components', 'percentage',
               existing_type=sa.NUMERIC(precision=5, scale=4),
               comment=None,
               existing_comment='Percentage for this component if applicable to this employee',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_payroll_components', 'parameters',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment=None,
               existing_comment='Employee-specific parameters, overrides general definition',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employee_payroll_components', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Assignment effective date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employee_payroll_components', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Assignment end date',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employees', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('employees', 'employee_code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique employee ID/Code',
               schema='hr')
    op.alter_column('employees', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment="Employee's first name",
               existing_nullable=False,
               schema='hr')
    op.alter_column('employees', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment="Employee's last name",
               existing_nullable=False,
               schema='hr')
    op.alter_column('employees', 'date_of_birth',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment="Employee's date of birth",
               existing_nullable=True,
               schema='hr')
    op.alter_column('employees', 'gender_lookup_value_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to gender lookup value',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employees', 'id_number',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='National ID or passport number (unique if applicable)',
               existing_nullable=True,
               schema='hr')
    op.alter_column('employees', 'nationality',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment="Employee's nationality",
               existing_nullable=True,
               schema='hr')
    op.alter_column('employees', 'hire_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment="Employee's hire date",
               existing_nullable=False,
               schema='hr')
    op.alter_column('employees', 'status_lookup_value_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to employee status lookup value (e.g., Active, Terminated)',
               existing_nullable=False,
               schema='hr')
    op.alter_column('employees', 'email',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment="Employee's email address",
               existing_nullable=True,
               schema='hr')
    op.alter_column('employees', 'phone_number',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment="Employee's phone number",
               existing_nullable=True,
               schema='hr')
    op.alter_column('employees', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Record creation timestamp',
               existing_nullable=False,
               existing_server_default=sa.text('now()'),
               schema='hr')
    op.alter_column('employees', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Record last update timestamp',
               existing_nullable=False,
               existing_server_default=sa.text('now()'),
               schema='hr')
    op.create_unique_constraint(None, 'employees', ['employee_code'], schema='hr')
    op.create_unique_constraint(None, 'employees', ['email'], schema='hr')
    op.drop_constraint('fk_employees_contract_type_lookup_value_id', 'employees', schema='hr', type_='foreignkey')
    op.drop_constraint('fk_employees_marital_status_lookup_value_id', 'employees', schema='hr', type_='foreignkey')
    op.drop_constraint('fk_employees_political_status_lookup_value_id', 'employees', schema='hr', type_='foreignkey')
    op.drop_constraint('fk_employees_employment_type_lookup_value_id', 'employees', schema='hr', type_='foreignkey')
    op.drop_constraint('fk_employees_education_level_lookup_value_id', 'employees', schema='hr', type_='foreignkey')
    op.create_foreign_key('fk_employee_contract_type_id', 'employees', 'lookup_values', ['contract_type_lookup_value_id'], ['id'], source_schema='hr', referent_schema='config', ondelete='SET NULL')
    op.create_foreign_key('fk_employee_political_status_id', 'employees', 'lookup_values', ['political_status_lookup_value_id'], ['id'], source_schema='hr', referent_schema='config', ondelete='SET NULL')
    op.create_foreign_key('fk_employee_education_level_id', 'employees', 'lookup_values', ['education_level_lookup_value_id'], ['id'], source_schema='hr', referent_schema='config', ondelete='SET NULL')
    op.create_foreign_key('fk_employee_marital_status_id', 'employees', 'lookup_values', ['marital_status_lookup_value_id'], ['id'], source_schema='hr', referent_schema='config', ondelete='SET NULL')
    op.create_foreign_key('fk_employee_employment_type_id', 'employees', 'lookup_values', ['employment_type_lookup_value_id'], ['id'], source_schema='hr', referent_schema='config', ondelete='SET NULL')
    op.drop_column('employees', 'job_title_id', schema='hr')
    op.alter_column('leave_types', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('leave_types', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique leave type code (e.g., AnnualLeave, SickLeave)',
               existing_nullable=False,
               schema='hr')
    op.alter_column('leave_types', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Leave type name',
               existing_nullable=False,
               schema='hr')
    op.alter_column('leave_types', 'accrual_rule_definition',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment=None,
               existing_comment='Definition of how this leave type accrues (e.g., per month, per year based on service)',
               existing_nullable=True,
               schema='hr')
    op.alter_column('leave_types', 'is_paid',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether this leave type is paid',
               existing_nullable=False,
               existing_server_default=sa.text('true'),
               schema='hr')
    op.alter_column('leave_types', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether this leave type is active',
               existing_nullable=False,
               existing_server_default=sa.text('true'),
               schema='hr')
    op.alter_column('personnel_categories', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='hr')
    op.alter_column('personnel_categories', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique job title code',
               existing_nullable=False,
               schema='hr')
    op.alter_column('personnel_categories', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Job title name',
               existing_nullable=False,
               schema='hr')
    op.alter_column('personnel_categories', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Description of the job title',
               existing_nullable=True,
               schema='hr')
    op.alter_column('personnel_categories', 'effective_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Job title definition effective date',
               existing_nullable=False,
               schema='hr')
    op.alter_column('personnel_categories', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Job title definition end date',
               existing_nullable=True,
               schema='hr')
    op.alter_column('personnel_categories', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether the job title is currently in use',
               existing_nullable=False,
               existing_server_default=sa.text('true'),
               schema='hr')
    op.drop_constraint('unique_hr_positions_name', 'positions', schema='hr', type_='unique')
    op.alter_column('payroll_entries', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='payroll')
    op.alter_column('payroll_entries', 'employee_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to employees',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_entries', 'payroll_period_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to the payroll period',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_entries', 'payroll_run_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to the specific payroll run this result belongs to',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_entries', 'gross_pay',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Total gross pay (應發合計)',
               existing_nullable=False,
               existing_server_default=sa.text("'0'::numeric"),
               schema='payroll')
    op.alter_column('payroll_entries', 'total_deductions',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Total deductions (應扣合計)',
               existing_nullable=False,
               existing_server_default=sa.text("'0'::numeric"),
               schema='payroll')
    op.alter_column('payroll_entries', 'net_pay',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Total net pay (實發合計)',
               existing_nullable=False,
               existing_server_default=sa.text("'0'::numeric"),
               schema='payroll')
    op.alter_column('payroll_entries', 'earnings_details',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment=None,
               existing_comment='JSONB object storing individual earning items (key: component code, value: amount)',
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"),
               schema='payroll')
    op.alter_column('payroll_entries', 'deductions_details',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment=None,
               existing_comment='JSONB object storing individual deduction items (key: component code, value: amount)',
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"),
               schema='payroll')
    op.alter_column('payroll_entries', 'calculation_inputs',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment=None,
               existing_comment="Optional JSONB for storing calculation input values (e.g., contribution bases, hours worked) used in this specific entry's calculation run",
               existing_nullable=True,
               schema='payroll')
    op.alter_column('payroll_entries', 'calculation_log',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment=None,
               existing_comment='Optional JSONB for storing calculation log/details for this employee/period',
               existing_nullable=True,
               schema='payroll')
    op.alter_column('payroll_entries', 'status_lookup_value_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to payroll entry status (e.g., Draft, Finalized, Paid)',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_entries', 'remarks',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Remarks for this payroll entry, as seen in examples',
               existing_nullable=True,
               schema='payroll')
    op.alter_column('payroll_entries', 'calculated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Timestamp when this entry was calculated',
               existing_nullable=False,
               existing_server_default=sa.text('now()'),
               schema='payroll')
    op.drop_constraint('uq_payroll_entries_employee_run', 'payroll_entries', schema='payroll', type_='unique')
    op.alter_column('payroll_periods', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='payroll')
    op.alter_column('payroll_periods', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Payroll period name (e.g., 2024-01 Monthly)',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_periods', 'start_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Period start date',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_periods', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Period end date',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_periods', 'pay_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='Date when payment is scheduled/made',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_periods', 'frequency_lookup_value_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to pay frequency lookup value (e.g., Monthly, Weekly)',
               existing_nullable=False,
               schema='payroll')
    op.drop_column('payroll_periods', 'new_id', schema='payroll')
    op.drop_column('payroll_periods', 'status', schema='payroll')
    op.alter_column('payroll_runs', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='payroll')
    op.alter_column('payroll_runs', 'payroll_period_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to the payroll period',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_runs', 'run_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Timestamp of the payroll run execution',
               existing_nullable=False,
               existing_server_default=sa.text('now()'),
               schema='payroll')
    op.alter_column('payroll_runs', 'status_lookup_value_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to run status lookup value (e.g., Processing, Completed, Archived)',
               existing_nullable=False,
               schema='payroll')
    op.alter_column('payroll_runs', 'initiated_by_user_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to user who initiated the run',
               existing_nullable=True,
               schema='payroll')
    op.alter_column('payroll_runs', 'total_employees',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Total number of employees processed in this run',
               existing_nullable=True,
               schema='payroll')
    op.alter_column('payroll_runs', 'total_net_pay',
               existing_type=sa.NUMERIC(precision=18, scale=4),
               comment=None,
               existing_comment='Total net pay amount for this run',
               existing_nullable=True,
               schema='payroll')
    op.alter_column('permissions', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='security')
    op.alter_column('permissions', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique permission code (e.g., payroll:view, employee:edit)',
               existing_nullable=False,
               schema='security')
    op.alter_column('permissions', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Description of the permission',
               existing_nullable=True,
               schema='security')
    op.alter_column('role_permissions', 'role_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to roles',
               existing_nullable=False,
               schema='security')
    op.alter_column('role_permissions', 'permission_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to permissions',
               existing_nullable=False,
               schema='security')
    op.alter_column('roles', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='security')
    op.alter_column('roles', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique role code',
               existing_nullable=False,
               schema='security')
    op.alter_column('roles', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Role name',
               existing_nullable=False,
               schema='security')
    op.alter_column('user_roles', 'user_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to users',
               existing_nullable=False,
               schema='security')
    op.alter_column('user_roles', 'role_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Foreign key to roles',
               existing_nullable=False,
               schema='security')
    op.alter_column('users', 'id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='security')
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Unique username',
               existing_nullable=False,
               schema='security')
    op.alter_column('users', 'password_hash',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='Hashed password',
               existing_nullable=False,
               schema='security')
    op.alter_column('users', 'employee_id',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='Optional link to an employee',
               existing_nullable=True,
               schema='security')
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether the user account is active',
               existing_nullable=False,
               existing_server_default=sa.text('true'),
               schema='security')
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='User creation timestamp',
               existing_nullable=False,
               existing_server_default=sa.text('now()'),
               schema='security')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. 删除外键约束
    op.drop_constraint('fk_payroll_period_status', 'payroll_periods', schema='payroll')
    
    # 2. 删除status_lookup_value_id字段
    op.drop_column('payroll_periods', 'status_lookup_value_id', schema='payroll')
    
    # 注意：我们不删除lookup_values和lookup_types中的数据，因为它们可能被其他表引用
    
    # [保留自动生成的其他代码]
    # ### end Alembic commands ###
