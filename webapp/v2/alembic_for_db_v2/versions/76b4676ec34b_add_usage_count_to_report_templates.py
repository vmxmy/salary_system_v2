"""add_usage_count_to_report_templates

Revision ID: 76b4676ec34b
Revises: ebf68cbd88b5
Create Date: 2025-05-30 10:40:21.514998

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '76b4676ec34b'
down_revision: Union[str, None] = 'ebf68cbd88b5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('report_calculated_fields',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='字段名称'),
    sa.Column('alias', sa.String(length=100), nullable=False, comment='字段别名'),
    sa.Column('formula', sa.Text(), nullable=False, comment='计算公式'),
    sa.Column('return_type', sa.String(length=50), nullable=False, comment='返回类型'),
    sa.Column('description', sa.Text(), nullable=True, comment='描述'),
    sa.Column('display_name_zh', sa.String(length=100), nullable=True, comment='中文显示名称'),
    sa.Column('display_name_en', sa.String(length=100), nullable=True, comment='英文显示名称'),
    sa.Column('is_global', sa.Boolean(), nullable=True, comment='是否全局字段'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否激活'),
    sa.Column('category', sa.String(length=50), nullable=True, comment='分类'),
    sa.Column('created_by', sa.BigInteger(), nullable=True, comment='创建者'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['created_by'], ['security.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index(op.f('ix_config_report_calculated_fields_id'), 'report_calculated_fields', ['id'], unique=False, schema='config')
    op.create_table('report_template_fields',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('template_id', sa.BigInteger(), nullable=False),
    sa.Column('field_name', sa.String(length=100), nullable=False, comment='字段名'),
    sa.Column('field_alias', sa.String(length=100), nullable=True, comment='字段别名'),
    sa.Column('data_source', sa.String(length=50), nullable=False, comment='数据源类型'),
    sa.Column('field_type', sa.String(length=50), nullable=False, comment='字段类型'),
    sa.Column('display_order', sa.Integer(), nullable=True, comment='显示顺序'),
    sa.Column('is_visible', sa.Boolean(), nullable=True, comment='是否可见'),
    sa.Column('is_sortable', sa.Boolean(), nullable=True, comment='是否可排序'),
    sa.Column('is_filterable', sa.Boolean(), nullable=True, comment='是否可筛选'),
    sa.Column('width', sa.Integer(), nullable=True, comment='列宽'),
    sa.Column('formatting_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='格式化配置'),
    sa.Column('calculation_formula', sa.Text(), nullable=True, comment='计算公式'),
    sa.ForeignKeyConstraint(['template_id'], ['config.report_templates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='config'
    )
    op.create_index(op.f('ix_config_report_template_fields_id'), 'report_template_fields', ['id'], unique=False, schema='config')
    op.drop_table('calculated_fields', schema='config')
    op.drop_table('report_fields', schema='config')
    op.alter_column('report_data_source_access_logs', 'id',
               existing_type=sa.BIGINT(),
               # server_default=None,
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.alter_column('report_data_source_access_logs', 'access_type',
               existing_type=sa.VARCHAR(length=20),
               comment='访问类型: view, query, export',
               existing_comment='访问类型',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_data_source_access_logs', 'access_result',
               existing_type=sa.VARCHAR(length=20),
               comment='访问结果: success, failed, denied',
               existing_comment='访问结果',
               existing_nullable=False,
               schema='config')
    op.drop_index('idx_access_log_accessed_at', table_name='report_data_source_access_logs', schema='config')
    op.drop_index('idx_access_log_data_source', table_name='report_data_source_access_logs', schema='config')
    op.drop_index('idx_access_log_type_result', table_name='report_data_source_access_logs', schema='config')
    op.drop_index('idx_access_log_user', table_name='report_data_source_access_logs', schema='config')
    op.create_index(op.f('ix_config_report_data_source_access_logs_id'), 'report_data_source_access_logs', ['id'], unique=False, schema='config')
    op.alter_column('report_data_source_fields', 'id',
               existing_type=sa.BIGINT(),
               # server_default=None,
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.create_index(op.f('ix_config_report_data_source_fields_id'), 'report_data_source_fields', ['id'], unique=False, schema='config')
    op.drop_constraint('report_data_source_fields_data_source_id_fkey', 'report_data_source_fields', schema='config', type_='foreignkey')
    op.create_foreign_key(None, 'report_data_source_fields', 'report_data_sources', ['data_source_id'], ['id'], source_schema='config', referent_schema='config')
    op.alter_column('report_data_sources', 'id',
               existing_type=sa.BIGINT(),
               # server_default=None,
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.alter_column('report_data_sources', 'access_level',
               existing_type=sa.VARCHAR(length=20),
               comment='访问级别: public, private, restricted',
               existing_comment='访问级别',
               existing_nullable=True,
               existing_server_default=sa.text("'public'::character varying"),
               schema='config')
    op.alter_column('report_data_sources', 'is_system',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_comment='是否系统内置',
               existing_server_default=sa.text('false'),
               schema='config')
    op.alter_column('report_data_sources', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_comment='创建时间',
               existing_server_default=sa.text('now()'),
               schema='config')
    op.alter_column('report_data_sources', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_comment='更新时间',
               existing_server_default=sa.text('now()'),
               schema='config')
    op.drop_constraint('uq_data_source_schema_table', 'report_data_sources', schema='config', type_='unique')
    op.create_index(op.f('ix_config_report_data_sources_id'), 'report_data_sources', ['id'], unique=False, schema='config')
    op.drop_column('report_data_sources', 'access_permissions', schema='config')
    op.alter_column('report_executions', 'id',
               existing_type=sa.BIGINT(),
               # server_default=None,
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.alter_column('report_executions', 'executed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_comment='执行时间',
               existing_server_default=sa.text('now()'),
               schema='config')
    op.drop_index('idx_report_executions_status', table_name='report_executions', schema='config')
    op.drop_index('idx_report_executions_template', table_name='report_executions', schema='config')
    op.drop_index('idx_report_executions_user_time', table_name='report_executions', schema='config')
    op.create_index(op.f('ix_config_report_executions_id'), 'report_executions', ['id'], unique=False, schema='config')
    op.alter_column('report_permissions', 'id',
               existing_type=sa.BIGINT(),
               # server_default=None,
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.alter_column('report_permissions', 'subject_type',
               existing_type=sa.VARCHAR(length=20),
               comment='主体类型: user, role, department',
               existing_comment='主体类型',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_permissions', 'object_type',
               existing_type=sa.VARCHAR(length=20),
               comment='对象类型: data_source, template, field',
               existing_comment='对象类型',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_permissions', 'permission_type',
               existing_type=sa.VARCHAR(length=20),
               comment='权限类型: read, write, execute, export, admin',
               existing_comment='权限类型',
               existing_nullable=False,
               schema='config')
    op.create_index(op.f('ix_config_report_permissions_id'), 'report_permissions', ['id'], unique=False, schema='config')
    op.add_column('report_templates', sa.Column('usage_count', sa.Integer(), nullable=False, comment='使用次数'), schema='config')
    op.alter_column('report_templates', 'id',
               existing_type=sa.BIGINT(),
               # server_default=None,
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.alter_column('report_templates', 'name',
               existing_type=sa.VARCHAR(length=255),
               comment='模板名称',
               existing_comment='报表名称',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_templates', 'description',
               existing_type=sa.TEXT(),
               comment='描述',
               existing_comment='报表描述',
               existing_nullable=True,
               schema='config')
    op.alter_column('report_templates', 'category',
               existing_type=sa.VARCHAR(length=100),
               comment='分类',
               existing_comment='报表分类',
               existing_nullable=True,
               schema='config')
    op.alter_column('report_templates', 'template_config',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='模板配置',
               existing_comment='报表配置JSON',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_templates', 'is_public',
               existing_type=sa.BOOLEAN(),
               comment='是否公开',
               existing_comment='是否公开模板',
               existing_nullable=False,
               existing_server_default=sa.text('false'),
               schema='config')
    op.alter_column('report_templates', 'created_by',
               existing_type=sa.BIGINT(),
               nullable=True,
               existing_comment='创建者',
               schema='config')
    op.create_index(op.f('ix_config_report_templates_id'), 'report_templates', ['id'], unique=False, schema='config')
    op.alter_column('report_user_preferences', 'id',
               existing_type=sa.BIGINT(),
               # server_default=None,
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.alter_column('report_user_preferences', 'preference_type',
               existing_type=sa.VARCHAR(length=50),
               comment='偏好类型: layout, filter, sort, export',
               existing_comment='偏好类型',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_user_preferences', 'object_type',
               existing_type=sa.VARCHAR(length=20),
               comment='对象类型: template, data_source',
               existing_comment='对象类型',
               existing_nullable=True,
               schema='config')
    op.drop_constraint('uq_user_preference', 'report_user_preferences', schema='config', type_='unique')
    op.create_index('uq_user_preference', 'report_user_preferences', ['user_id', 'preference_type', 'object_type', 'object_id'], unique=True, schema='config')
    op.create_index(op.f('ix_config_report_user_preferences_id'), 'report_user_preferences', ['id'], unique=False, schema='config')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_config_report_user_preferences_id'), table_name='report_user_preferences', schema='config')
    op.drop_index('uq_user_preference', table_name='report_user_preferences', schema='config')
    op.create_unique_constraint('uq_user_preference', 'report_user_preferences', ['user_id', 'preference_type', 'object_type', 'object_id'], schema='config', postgresql_nulls_not_distinct=False)
    op.alter_column('report_user_preferences', 'object_type',
               existing_type=sa.VARCHAR(length=20),
               comment='对象类型',
               existing_comment='对象类型: template, data_source',
               existing_nullable=True,
               schema='config')
    op.alter_column('report_user_preferences', 'preference_type',
               existing_type=sa.VARCHAR(length=50),
               comment='偏好类型',
               existing_comment='偏好类型: layout, filter, sort, export',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_user_preferences', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.drop_index(op.f('ix_config_report_templates_id'), table_name='report_templates', schema='config')
    op.alter_column('report_templates', 'created_by',
               existing_type=sa.BIGINT(),
               nullable=False,
               existing_comment='创建者',
               schema='config')
    op.alter_column('report_templates', 'is_public',
               existing_type=sa.BOOLEAN(),
               comment='是否公开模板',
               existing_comment='是否公开',
               existing_nullable=False,
               existing_server_default=sa.text('false'),
               schema='config')
    op.alter_column('report_templates', 'template_config',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='报表配置JSON',
               existing_comment='模板配置',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_templates', 'category',
               existing_type=sa.VARCHAR(length=100),
               comment='报表分类',
               existing_comment='分类',
               existing_nullable=True,
               schema='config')
    op.alter_column('report_templates', 'description',
               existing_type=sa.TEXT(),
               comment='报表描述',
               existing_comment='描述',
               existing_nullable=True,
               schema='config')
    op.alter_column('report_templates', 'name',
               existing_type=sa.VARCHAR(length=255),
               comment='报表名称',
               existing_comment='模板名称',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_templates', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.drop_column('report_templates', 'usage_count', schema='config')
    op.drop_index(op.f('ix_config_report_permissions_id'), table_name='report_permissions', schema='config')
    op.alter_column('report_permissions', 'permission_type',
               existing_type=sa.VARCHAR(length=20),
               comment='权限类型',
               existing_comment='权限类型: read, write, execute, export, admin',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_permissions', 'object_type',
               existing_type=sa.VARCHAR(length=20),
               comment='对象类型',
               existing_comment='对象类型: data_source, template, field',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_permissions', 'subject_type',
               existing_type=sa.VARCHAR(length=20),
               comment='主体类型',
               existing_comment='主体类型: user, role, department',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_permissions', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.drop_index(op.f('ix_config_report_executions_id'), table_name='report_executions', schema='config')
    op.create_index('idx_report_executions_user_time', 'report_executions', ['executed_by', 'executed_at'], unique=False, schema='config')
    op.create_index('idx_report_executions_template', 'report_executions', ['template_id'], unique=False, schema='config')
    op.create_index('idx_report_executions_status', 'report_executions', ['status'], unique=False, schema='config')
    op.alter_column('report_executions', 'executed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_comment='执行时间',
               existing_server_default=sa.text('now()'),
               schema='config')
    op.alter_column('report_executions', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.add_column('report_data_sources', sa.Column('access_permissions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='访问权限配置'), schema='config')
    op.drop_index(op.f('ix_config_report_data_sources_id'), table_name='report_data_sources', schema='config')
    op.create_unique_constraint('uq_data_source_schema_table', 'report_data_sources', ['schema_name', 'table_name'], schema='config', postgresql_nulls_not_distinct=False)
    op.alter_column('report_data_sources', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_comment='更新时间',
               existing_server_default=sa.text('now()'),
               schema='config')
    op.alter_column('report_data_sources', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_comment='创建时间',
               existing_server_default=sa.text('now()'),
               schema='config')
    op.alter_column('report_data_sources', 'is_system',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_comment='是否系统内置',
               existing_server_default=sa.text('false'),
               schema='config')
    op.alter_column('report_data_sources', 'access_level',
               existing_type=sa.VARCHAR(length=20),
               comment='访问级别',
               existing_comment='访问级别: public, private, restricted',
               existing_nullable=True,
               existing_server_default=sa.text("'public'::character varying"),
               schema='config')
    op.alter_column('report_data_sources', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.drop_constraint(None, 'report_data_source_fields', schema='config', type_='foreignkey')
    op.create_foreign_key('report_data_source_fields_data_source_id_fkey', 'report_data_source_fields', 'report_data_sources', ['data_source_id'], ['id'], source_schema='config', referent_schema='config', ondelete='CASCADE')
    op.drop_index(op.f('ix_config_report_data_source_fields_id'), table_name='report_data_source_fields', schema='config')
    op.alter_column('report_data_source_fields', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.drop_index(op.f('ix_config_report_data_source_access_logs_id'), table_name='report_data_source_access_logs', schema='config')
    op.create_index('idx_access_log_user', 'report_data_source_access_logs', ['user_id'], unique=False, schema='config')
    op.create_index('idx_access_log_type_result', 'report_data_source_access_logs', ['access_type', 'access_result'], unique=False, schema='config')
    op.create_index('idx_access_log_data_source', 'report_data_source_access_logs', ['data_source_id'], unique=False, schema='config')
    op.create_index('idx_access_log_accessed_at', 'report_data_source_access_logs', ['accessed_at'], unique=False, schema='config')
    op.alter_column('report_data_source_access_logs', 'access_result',
               existing_type=sa.VARCHAR(length=20),
               comment='访问结果',
               existing_comment='访问结果: success, failed, denied',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_data_source_access_logs', 'access_type',
               existing_type=sa.VARCHAR(length=20),
               comment='访问类型',
               existing_comment='访问类型: view, query, export',
               existing_nullable=False,
               schema='config')
    op.alter_column('report_data_source_access_logs', 'id',
               existing_type=sa.BIGINT(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True,
               schema='config')
    op.create_table('report_fields',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('template_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='报表模板ID'),
    sa.Column('field_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='字段名称'),
    sa.Column('field_alias', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='自定义字段别名'),
    sa.Column('data_source', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='数据源表名'),
    sa.Column('field_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='字段类型'),
    sa.Column('display_order', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False, comment='显示顺序'),
    sa.Column('is_visible', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False, comment='是否可见'),
    sa.Column('formatting_config', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='格式化配置'),
    sa.Column('calculation_formula', sa.TEXT(), autoincrement=False, nullable=True, comment='计算公式'),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True, comment='列宽度'),
    sa.Column('is_sortable', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False, comment='是否可排序'),
    sa.Column('is_filterable', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False, comment='是否可筛选'),
    sa.ForeignKeyConstraint(['template_id'], ['config.report_templates.id'], name='report_fields_template_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='report_fields_pkey'),
    schema='config'
    )
    op.create_table('calculated_fields',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='计算字段名称'),
    sa.Column('alias', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='字段别名'),
    sa.Column('formula', sa.TEXT(), autoincrement=False, nullable=False, comment='计算公式'),
    sa.Column('return_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='返回类型'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='字段描述'),
    sa.Column('created_by', sa.BIGINT(), autoincrement=False, nullable=False, comment='创建者'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='更新时间'),
    sa.Column('is_global', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False, comment='是否全局可用'),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False, comment='是否激活'),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='字段分类'),
    sa.ForeignKeyConstraint(['created_by'], ['security.users.id'], name='calculated_fields_created_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='calculated_fields_pkey'),
    sa.UniqueConstraint('name', 'created_by', name='uq_calculated_field_name_user', postgresql_include=[], postgresql_nulls_not_distinct=False),
    schema='config'
    )
    op.drop_index(op.f('ix_config_report_template_fields_id'), table_name='report_template_fields', schema='config')
    op.drop_table('report_template_fields', schema='config')
    op.drop_index(op.f('ix_config_report_calculated_fields_id'), table_name='report_calculated_fields', schema='config')
    op.drop_table('report_calculated_fields', schema='config')
    # ### end Alembic commands ###
